#!/usr/bin/env python

import requests
import sys

if sys.argv[1:2] == ["config"]:
  sys.stdout.write("graph_title CouchDB Request Time\n")
  sys.stdout.write("graph_info CouchDB database request handling times over the past 5 minutes.\n")
  sys.stdout.write("graph_category slycat\n")
  sys.stdout.write("graph_vlabel Time (secs)\n")
  sys.stdout.write("graph_order request_time_max request_time_mean request_time_min\n")

  sys.stdout.write("request_time_min.label Request Time (min)\n")
  sys.stdout.write("request_time_min.info Minimum request time.\n")

  sys.stdout.write("request_time_max.label Request Time (max)\n")
  sys.stdout.write("request_time_max.info Maximum request time.\n")

  sys.stdout.write("request_time_mean.label Request Time (mean)\n")
  sys.stdout.write("request_time_mean.info Average request time.\n")
else:
  try:
    response = requests.get("http://localhost:5984/_stats/couchdb/request_time?range=300", proxies={"http":None}).json()
    min = response["couchdb"]["request_time"]["min"]
    max = response["couchdb"]["request_time"]["max"]
    mean = response["couchdb"]["request_time"]["mean"]
    sys.stdout.write("request_time_min.value %s\n" % (min * 0.001 if min is not None else "U"))
    sys.stdout.write("request_time_max.value %s\n" % (max * 0.001 if max is not None else "U"))
    sys.stdout.write("request_time_mean.value %s\n" % (mean * 0.001 if mean is not None else "U"))
  except:
    sys.stdout.write("request_time_min.value U\n")
    sys.stdout.write("request_time_max.value U\n")
    sys.stdout.write("request_time_mean.value U\n")
