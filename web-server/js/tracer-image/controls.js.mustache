function Controls(plot) {
  this.ready = false;
  this.plot = plot;
  plot.controls = this;
}

Controls.prototype.setup = function() {
  console.debug("inside setup_controls()");
  var plot = this.plot;
  if( !this.ready && model.metadata && (model.image_columns != null) && (model.rating_columns != null)
      && (model.category_columns != null) && (plot.x_index != null) && (plot.y_index != null)
      && (plot.images_index != null) && (plot.selected_simulations != null) )
  {
    this.ready = true;
    var numeric_variables = [];

    for(var i = 0; i < model.metadata["column-count"]; i++) {
      if(model.metadata["column-types"][i] != 'string')
        numeric_variables.push(i);
    }

    var color_variable = model.metadata["column-count"] - 1;
    if("variable-selection" in layout.bookmark) {
      color_variable = [layout.bookmark["variable-selection"]];
    }

    $(plot.plot_ref + " .controls").tracer_controls({
      "server-root" : "{{server-root}}",
      mid : "{{_id}}",
      model_name: "{{name}}",
      aid : "data-table",
      metadata: model.metadata,
      x_variables: numeric_variables.slice(0, numeric_variables.length-1),
      y_variables: numeric_variables.slice(0, numeric_variables.length-1),
      image_variables: model.image_columns,
      color_variables: [numeric_variables[numeric_variables.length-1]].concat(numeric_variables.slice(0, numeric_variables.length-1)),
      rating_variables : model.rating_columns,
      category_variables : model.category_columns,
      selection : plot.selected_simulations,
      "x-variable" : plot.x_index,
      "y-variable" : plot.y_index,
      "image-variable" : plot.images_index,
      "color-variable" : color_variable
    });
/*
    // Changing the x variable updates the controls ...
    $("#table").bind("x-selection-changed", function(event, variable) {
      $(plot.plot_ref + " .controls").tracer_controls("option", "x-variable", variable);
    });

    // Changing the y variable updates the controls ...
    $("#table").bind("y-selection-changed", function(event, variable) {
      $(plot.plot_ref + " .controls").tracer_controls("option", "y-variable", variable);
    });

    // Changing the image variable updates the controls ...
    $("#table").bind("images-selection-changed", function(event, variable) {
      $(plot.plot_ref + " .controls").tracer_controls("option", "image-variable", variable);
    });

    // Changing the table variable updates the controls ...
    $("#table").bind("variable-selection-changed", function(event, selection) {
      $(plot.plot_ref + " .controls").tracer_controls("option", "color-variable", selection[0]);
    });

    // Changing the table variable updates the legend label ...
    $("#table").bind("variable-selection-changed", function(event, selection) {
      $(plot.plot_ref + " .scatterplot").scatterplot("option", {v_label:model.metadata["column-names"][selection[0]]});
    });
*/
    // Changing the color variable updates the scatterplot ...
    $(plot.plot_ref + " .controls").bind("color-selection-changed", function(event, variable) {
      plot.update_value(variable);
    });

    // Changing the color variable updates the legend label ...
    $(plot.plot_ref + " .controls").bind("color-selection-changed", function(event, variable) {
      $(plot.plot_ref + " .scatterplot").scatterplot("option", {v_label:model.metadata["column-names"][variable]});
    });

    // Changing the value of a variable updates the database, table, and scatterplot ...
    $(plot.plot_ref + " .controls").bind("set-value", function(event, arguments) {
      //console.debug("set-value. selection: " + selection + ", variable: " + variable + ", value: " + value);
      var selection = arguments.selection;
      var variable = arguments.variable;
      var myBlob = new Blob(['[' + arguments.value + ']'], {type: "text/html"});

      var hyperslice = "";
      writeData(selection, variable, myBlob, 0);

      function writeData(selection, variable, blob, iterator){
        console.debug("inside writeData()");
        hyperslice = selection[iterator] + ":" + (selection[iterator]+1);
        var formdata = new FormData();
        // formdata.append("array", 0);
        // formdata.append("attribute", variable);
        // formdata.append("hyperslice", hyperslice);
        formdata.append("hyperchunks", 0 + "/" + variable + "/" + hyperslice);
        formdata.append("data", blob);
        console.debug("write data PUT models/id/arraysets/data-table/data -- ajax");
        $.ajax({
          type: "PUT",
          url : "{{server-root}}models/{{_id}}/arraysets/data-table/data",
          data : formdata,
          processData: false,
          contentType: false,
          success : function(results) {
            console.debug("writing array data SUCCESS");
            iterator++;
            if(iterator<selection.length) {
              writeData(selection, variable, blob, iterator);
            }
            else {
              // Finished writing data, need to update widgets

              $("#table").table("update_data");

              if(variable == this.x_index)
                plot.update_x(variable);
              if(variable == y_index)
                plot.update_y(variable);
              if(variable == v_index)
                plot.update_value(variable);

              table.load_statistics([variable], function(){
                $("#table").table("option", "statistics", table.statistics);
              });
            }
          },
          error : function(jqXHR, textStatus, errorThrown) {
            console.debug("writing array data error");
          },
        });
      }
    });

    // Log changes to the x variable ...
    $(plot.plot_ref + " .controls").bind("x-selection-changed", function(event, variable) {

      plot.x_selection_changed(variable);
    });

    // Log changes to the y variable ...
    $(plot.plot_ref + " .controls").bind("y-selection-changed", function(event, variable) {
      plot.y_selection_changed(variable);
    });

    // Log changes to the images variable ...
    $(plot.plot_ref + " .controls").bind("images-selection-changed", function(event, variable) {
      plot.images_selection_changed(variable);
    });

    // Log changes to the color variable ...
    $(plot.plot_ref + " .controls").bind("color-selection-changed", function(event, variable) {
      plot.selected_variable_changed(Number(variable));
    });

    // Log changes to hidden selection ...
    $(plot.plot_ref + " .controls").bind("hide-selection", function(event, selection) {
      for(var i=0; i<plot.selected_simulations.length; i++){
        if($.inArray(plot.selected_simulations[i], plot.hidden_simulations) == -1) {
          plot.hidden_simulations.push(plot.selected_simulations[i]);
        }
      }
      hidden_simulations_changed();
      $("#table").table("option", "hidden_simulations", plot.hidden_simulations);
      $(plot.plot_ref + " .scatterplot").scatterplot("option", "hidden_simulations", plot.hidden_simulations);
    });

    // Log changes to hidden selection ...
    $(plot.plot_ref + " .controls").bind("show-selection", function(event, selection) {
      for(var i=0; i<plot.selected_simulations.length; i++){
        var index = $.inArray(plot.selected_simulations[i], plot.hidden_simulations);
        if(index != -1) {
          plot.hidden_simulations.splice(index, 1);
        }
      }
      plot.hidden_simulations_changed();
      $("#table").table("option", "hidden_simulations", plot.hidden_simulations);
      $(plot.plot_ref + " .scatterplot").scatterplot("option", "hidden_simulations", plot.hidden_simulations);
    });
  }
};
