function metadata_loaded() {
  setup_table();

  if(!indices && table_metadata) {
    var count = table_metadata["row-count"];
    indices = new Int32Array(count);
    for(var i = 0; i != count; ++i) {
      indices[i] = i;
    }
  }

  if(table_metadata && bookmark) {
    // Choose some columns for the X and Y axes.
    var numeric_variables = [];
    for(var i = 0; i < table_metadata["column-count"]-1; i++) {
      // Only use non-string columns that are not used for ratings or categories
      if(table_metadata["column-types"][i] != 'string' && rating_columns.indexOf(i) == -1 && category_columns.indexOf(i) == -1) {
        numeric_variables.push(i);
      }
    }

    x_index = numeric_variables[0];
    y_index = numeric_variables[1 % numeric_variables.length];
    if("x-selection" in bookmark) {
      x_index = Number(bookmark["x-selection"]);
    }
    if("y-selection" in bookmark) {
      y_index = Number(bookmark["y-selection"]);
    }
    // Set state of selected and hidden simulations
    selected_simulations = [];
    if("simulation-selection" in bookmark) {
      selected_simulations = bookmark["simulation-selection"];
    }
    hidden_simulations = [];
    if("hidden-simulations" in bookmark) {
      hidden_simulations = bookmark["hidden-simulations"];
    }

    $.when(
      get_model_array_attribute({
        server_root : "{{server-root}}",
        mid : "{{_id}}",
        aid : "data-table",
        array : 0,
        attribute : x_index,
        success : function(result)
        {
          x = result;
          //setup_grid();
          //setup_table();
        },
        error : artifact_missing
      });

      get_model_array_attribute({
        server_root : "{{server-root}}",
        mid : "{{_id}}",
        aid : "data-table",
        array : 0,
        attribute : y_index,
        success : function(result)
        {
          y = result;
          //setup_grid();
          //setup_table();
        },
        error : artifact_missing
      });

      v_index = table_metadata["column-count"] - 1;
      if("variable-selection" in bookmark)
        v_index = Number(bookmark["variable-selection"]);

      if(v_index == table_metadata["column-count"] - 1)
      {
        var count = table_metadata["row-count"];
        v = new Float64Array(count);
        for(var i = 0; i != count; ++i)
          v[i] = i;
        //setup_grid();
      }
      else
      {
        get_model_array_attribute({
          server_root : "{{server-root}}",
          mid : "{{_id}}",
          aid : "data-table",
          array : 0,
          attribute : v_index,
          success : function(result)
          {
            v = result;
            //setup_grid();
          },
          error : artifact_missing
        });
      }

      images_index = image_columns[0];
      if("images-selection" in bookmark)
        images_index = bookmark["images-selection"];
      $.ajax(
        {
          type : "GET",
          url : "{{server-root}}models/{{_id}}/arraysets/data-table/arrays/0/attributes/"
            + images_index + "/chunk?ranges=0," + table_metadata["row-count"],
          success : function(result)
          {
            images = result;
            //setup_grid();
            //setup_table();
          },
          error: artifact_missing
        });
    ).then(function() {
      setup_grid();
      setup_table();
      setup_controls();
    });
  }
}

function setup_table()
{
  if( !table_ready && table_metadata && (table_statistics.length == table_metadata["column-count"])
    && bookmark && (x_index != null) && (y_index != null) && (images_index != null)
    && (selected_simulations != null) && (hidden_simulations != null) )
  {
    table_ready = true;

    $("#table-pane .load-status").css("display", "none");

    var other_columns = [];
    for(var i = 0; i != table_metadata["column-count"] - 1; ++i)
    {
      if($.inArray(i, input_columns) == -1 && $.inArray(i, output_columns) == -1
        && $.inArray(i, rating_columns) == -1 && $.inArray(i, category_columns) == -1)
        other_columns.push(i);
    }

    var table_options =
    {
      "server-root" : "{{server-root}}",
      mid : "{{_id}}",
      aid : "data-table",
      metadata : table_metadata,
      statistics : table_statistics,
      inputs : input_columns,
      outputs : output_columns,
      others : other_columns,
      images : image_columns,
      ratings : rating_columns,
      categories : category_columns,
      "image-variable" : images_index,
      "x-variable" : x_index,
      "y-variable" : y_index,
      "row-selection" : selected_simulations,
      hidden_simulations : hidden_simulations,
    };

    var colormap = bookmark["colormap"] !== undefined ? bookmark["colormap"] : "night";
    table_options.colormap = $("#color-switcher").colorswitcher("get_color_map", colormap);

    if("sort-variable" in bookmark && "sort-order" in bookmark)
    {
      table_options["sort-variable"] = bookmark["sort-variable"];
      table_options["sort-order"] = bookmark["sort-order"];
    }

    if("variable-selection" in bookmark)
    {
      table_options["variable-selection"] = [bookmark["variable-selection"]];
    }
    else
    {
      table_options["variable-selection"] = [table_metadata["column-count"] - 1];
    }

    $("#table").table(table_options);

    // Log changes to the table sort order ...
    $("#table").bind("variable-sort-changed", function(event, variable, order)
    {
      variable_sort_changed(variable, order);
    });

    // Log changes to the x variable ...
    $("#table").bind("x-selection-changed", function(event, variable)
    {
      x_selection_changed(variable);
    });

    // Log changes to the y variable ...
    $("#table").bind("y-selection-changed", function(event, variable)
    {
      y_selection_changed(variable);
    });

    // Log changes to the images variable ...
    $("#table").bind("images-selection-changed", function(event, variable)
    {
      images_selection_changed(variable);
    });

    // Log changes to the table variable selection ...
    $("#table").bind("variable-selection-changed", function(event, selection)
    {
      selected_variable_changed(selection[0]);
    });

    // Log changes to the table row selection ...
    $("#table").bind("row-selection-changed", function(event, selection)
    {
      // The table selection is an array buffer which can't be
      // serialized as JSON, so convert it to an array.
      var temp = [];
      for(var i = 0; i != selection.length; ++i)
        temp.push(selection[i]);
      selected_simulations_changed(temp);
    });

    // Changing the colormap updates the table ...
    $("#color-switcher").bind("colormap-changed", function(event, colormap)
    {
      $("#table").table("option", "colormap", $("#color-switcher").colorswitcher("get_color_map", colormap));
    });

    // Changing the table variable updates the scatterplot ...
    $("#table").bind("variable-selection-changed", function(event, selection)
    {
      update_scatterplot_value(selection[0]);
    });

    // Changing the scatterplot selection updates the table row selection and controls ..
    $("#grid").bind("selection-changed", function(event, selection)
    {
      $("#table").table("option", "row-selection", selection);
      $("#controls").controls("option", "selection", selection);
    });

    // Changing the table row selection updates the scatterplot and controls ...
    $("#table").bind("row-selection-changed", function(event, selection)
    {
      // The table selection is an array buffer, so convert it to an array.
      var temp = [];
      for(var i = 0; i != selection.length; ++i)
        temp.push(selection[i]);

      $("#grid").grid("option", "selection",  temp);
      $("#controls").controls("option", "selection",  temp);
    });

    // Changing the x variable updates the table ...
    $("#controls").bind("x-selection-changed", function(event, variable)
    {
      $("#table").table("option", "x-variable", variable);
    });

    // Changing the y variable updates the table ...
    $("#controls").bind("y-selection-changed", function(event, variable)
    {
      $("#table").table("option", "y-variable", variable);
    });

    // Changing the image variable updates the table ...
    $("#controls").bind("images-selection-changed", function(event, variable)
    {
      $("#table").table("option", "image-variable", variable);
    });

    // Changing the color variable updates the table ...
    $("#controls").bind("color-selection-changed", function(event, variable)
    {
      $("#table").table("option", "variable-selection", [Number(variable)]);
    });
  }
}
function load_table_statistics(columns, callback)
{
  var requests = Array();
  for(var i=0; i<columns.length; i++)
  {
    requests.push(
      $.ajax({
        url : "{{server-root}}models/{{_id}}/arraysets/data-table/arrays/0/attributes/" + columns[i] + "/statistics",
        contentType : "application/json",
      })
    );
  }
  var defer = $.when.apply($, requests);
  defer.done(function(){
    // This is executed only after every ajax request has been completed
    $.each(arguments, function(index, responseData){
      // "responseData" contains an array of response information for each specific request
      table_statistics[parseInt(columns[index])] = responseData.length == undefined ? responseData : responseData[0];
    });
    callback();
  });
}
