// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when loading a nav bar we have expected props on initial load 1`] = `
Object {
  "callBack": [MockFunction],
  "hostname": "testHost",
  "loadingData": false,
  "password": "password123",
  "sessionExists": false,
  "text": "buttonText",
  "username": "user",
}
`;

exports[`when loading a nav bar we have proper state 1`] = `
Object {
  "loadingData": false,
  "sessionExists": false,
  "text": "Connect",
}
`;

exports[`when loading a nav bar we should have a full initialization 1`] = `
ConnectButton {
  "_reactInternalFiber": FiberNode {
    "_debugHookTypes": null,
    "_debugID": 95,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 94,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 1,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "Component": [Function],
        "context": null,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "memoizedState": Object {
        "context": null,
        "mount": true,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "mode": 0,
      "nextEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 92,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 92,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": null,
          "expirationTime": 1073741823,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <button
                class="btn btn-primary float-right"
                type="button"
              >
                buttonText
              </button>
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 20,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "pingCache": null,
            "timeoutHandle": -1,
          },
          "tag": 3,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 32,
        "elementType": null,
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={null}
            props={
              Object {
                "callBack": [MockFunction],
                "hostname": "testHost",
                "loadingData": false,
                "password": "password123",
                "sessionExists": false,
                "text": "buttonText",
                "username": "user",
              }
            }
            wrappingComponentProps={null}
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <button
              class="btn btn-primary float-right"
              type="button"
            >
              buttonText
            </button>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 20,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={null}
              props={
                Object {
                  "callBack": [MockFunction],
                  "hostname": "testHost",
                  "loadingData": false,
                  "password": "password123",
                  "sessionExists": false,
                  "text": "buttonText",
                  "username": "user",
                }
              }
              wrappingComponentProps={null}
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "pendingProps": Object {
        "Component": [Function],
        "context": null,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 92,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 92,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": null,
          "expirationTime": 1073741823,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <button
                class="btn btn-primary float-right"
                type="button"
              >
                buttonText
              </button>
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 20,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "pingCache": null,
            "timeoutHandle": -1,
          },
          "tag": 3,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 32,
        "elementType": null,
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={null}
            props={
              Object {
                "callBack": [MockFunction],
                "hostname": "testHost",
                "loadingData": false,
                "password": "password123",
                "sessionExists": false,
                "text": "buttonText",
                "username": "user",
              }
            }
            wrappingComponentProps={null}
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <button
              class="btn btn-primary float-right"
              type="button"
            >
              buttonText
            </button>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 20,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={null}
              props={
                Object {
                  "callBack": [MockFunction],
                  "hostname": "testHost",
                  "loadingData": false,
                  "password": "password123",
                  "sessionExists": false,
                  "text": "buttonText",
                  "username": "user",
                }
              }
              wrappingComponentProps={null}
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": null,
          "props": Object {
            "callBack": [MockFunction],
            "hostname": "testHost",
            "loadingData": false,
            "password": "password123",
            "sessionExists": false,
            "text": "buttonText",
            "username": "user",
          },
          "wrappingComponentProps": null,
        },
        "refs": Object {},
        "rootFinderInstance": null,
        "state": Object {
          "context": null,
          "mount": true,
          "props": Object {
            "callBack": [MockFunction],
            "hostname": "testHost",
            "loadingData": false,
            "password": "password123",
            "sessionExists": false,
            "text": "buttonText",
            "username": "user",
          },
          "wrappingComponentProps": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": -1,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 96,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 97,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 1,
        "key": null,
        "lastEffect": null,
        "memoizedProps": "buttonText",
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": "buttonText",
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": buttonText,
        "tag": 6,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": "button",
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "children": Array [
          null,
          "buttonText",
        ],
        "className": "btn btn-primary float-right",
        "disabled": false,
        "onClick": [Function],
        "type": "button",
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": Array [
          null,
          "buttonText",
        ],
        "className": "btn btn-primary float-right",
        "disabled": false,
        "onClick": [Function],
        "type": "button",
      },
      "ref": null,
      "return": [Circular],
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": <button
        class="btn btn-primary float-right"
        type="button"
      >
        buttonText
      </button>,
      "tag": 5,
      "treeBaseDuration": 0,
      "type": "button",
      "updateQueue": null,
    },
    "childExpirationTime": 0,
    "contextDependencies": null,
    "effectTag": 1,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": null,
    "index": 0,
    "key": null,
    "lastEffect": null,
    "memoizedProps": Object {
      "callBack": [MockFunction],
      "hostname": "testHost",
      "loadingData": false,
      "password": "password123",
      "sessionExists": false,
      "text": "buttonText",
      "username": "user",
    },
    "memoizedState": Object {
      "loadingData": false,
      "sessionExists": false,
      "text": "buttonText",
    },
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "callBack": [MockFunction],
      "hostname": "testHost",
      "loadingData": false,
      "password": "password123",
      "sessionExists": false,
      "text": "buttonText",
      "username": "user",
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 94,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 1,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "Component": [Function],
        "context": null,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "memoizedState": Object {
        "context": null,
        "mount": true,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "mode": 0,
      "nextEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 92,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 92,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": null,
          "expirationTime": 1073741823,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <button
                class="btn btn-primary float-right"
                type="button"
              >
                buttonText
              </button>
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 20,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "pingCache": null,
            "timeoutHandle": -1,
          },
          "tag": 3,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 32,
        "elementType": null,
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={null}
            props={
              Object {
                "callBack": [MockFunction],
                "hostname": "testHost",
                "loadingData": false,
                "password": "password123",
                "sessionExists": false,
                "text": "buttonText",
                "username": "user",
              }
            }
            wrappingComponentProps={null}
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <button
              class="btn btn-primary float-right"
              type="button"
            >
              buttonText
            </button>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 20,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={null}
              props={
                Object {
                  "callBack": [MockFunction],
                  "hostname": "testHost",
                  "loadingData": false,
                  "password": "password123",
                  "sessionExists": false,
                  "text": "buttonText",
                  "username": "user",
                }
              }
              wrappingComponentProps={null}
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "pendingProps": Object {
        "Component": [Function],
        "context": null,
        "props": Object {
          "callBack": [MockFunction],
          "hostname": "testHost",
          "loadingData": false,
          "password": "password123",
          "sessionExists": false,
          "text": "buttonText",
          "username": "user",
        },
        "wrappingComponentProps": null,
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 92,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 92,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": null,
          "expirationTime": 1073741823,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <button
                class="btn btn-primary float-right"
                type="button"
              >
                buttonText
              </button>
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 20,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "pingCache": null,
            "timeoutHandle": -1,
          },
          "tag": 3,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1073741823,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "callBack": [MockFunction],
                      "hostname": "testHost",
                      "loadingData": false,
                      "password": "password123",
                      "sessionExists": false,
                      "text": "buttonText",
                      "username": "user",
                    }
                  }
                  wrappingComponentProps={null}
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 32,
        "elementType": null,
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={null}
            props={
              Object {
                "callBack": [MockFunction],
                "hostname": "testHost",
                "loadingData": false,
                "password": "password123",
                "sessionExists": false,
                "text": "buttonText",
                "username": "user",
              }
            }
            wrappingComponentProps={null}
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <button
              class="btn btn-primary float-right"
              type="button"
            >
              buttonText
            </button>
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 20,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={null}
              props={
                Object {
                  "callBack": [MockFunction],
                  "hostname": "testHost",
                  "loadingData": false,
                  "password": "password123",
                  "sessionExists": false,
                  "text": "buttonText",
                  "username": "user",
                }
              }
              wrappingComponentProps={null}
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": null,
          "props": Object {
            "callBack": [MockFunction],
            "hostname": "testHost",
            "loadingData": false,
            "password": "password123",
            "sessionExists": false,
            "text": "buttonText",
            "username": "user",
          },
          "wrappingComponentProps": null,
        },
        "refs": Object {},
        "rootFinderInstance": null,
        "state": Object {
          "context": null,
          "mount": true,
          "props": Object {
            "callBack": [MockFunction],
            "hostname": "testHost",
            "loadingData": false,
            "password": "password123",
            "sessionExists": false,
            "text": "buttonText",
            "username": "user",
          },
          "wrappingComponentProps": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "selfBaseDuration": 0,
    "sibling": null,
    "stateNode": [Circular],
    "tag": 1,
    "treeBaseDuration": 0,
    "type": [Function],
    "updateQueue": null,
  },
  "_reactInternalInstance": Object {},
  "checkRemoteStatus": [Function],
  "connect": [Function],
  "context": Object {},
  "props": Object {
    "callBack": [MockFunction],
    "hostname": "testHost",
    "loadingData": false,
    "password": "password123",
    "sessionExists": false,
    "text": "buttonText",
    "username": "user",
  },
  "refs": Object {},
  "state": Object {
    "loadingData": false,
    "sessionExists": false,
    "text": "buttonText",
  },
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
